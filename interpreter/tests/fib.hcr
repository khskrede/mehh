%module main:Main
  %rec
  {showrwzz :: integer:GHCziIntegerziInternals.Integer ->
               (ghczmprim:GHCziTypes.ZMZN ghczmprim:GHCziTypes.Char) =
     base:GHCziShow.show @ integer:GHCziIntegerziInternals.Integer
     base:GHCziNum.zdf3;
   zddEqrwB :: (base:GHCziClasses.ZCTEq
                integer:GHCziIntegerziInternals.Integer) =
     base:GHCziNum.zdp1Num @ integer:GHCziIntegerziInternals.Integer
     base:GHCziNum.zdf2;
   main:Main.fib :: integer:GHCziIntegerziInternals.Integer ->
                    integer:GHCziIntegerziInternals.Integer =
     \ (dsdwo::integer:GHCziIntegerziInternals.Integer) ->
         %case integer:GHCziIntegerziInternals.Integer (base:GHCziClasses.zeze
                                                        @ integer:GHCziIntegerziInternals.Integer
                                                        zddEqrwB dsdwo
                                                        (integer:GHCziInteger.smallInteger
                                                         (0::ghczmprim:GHCziPrim.Intzh)))
         %of (wildB1::ghczmprim:GHCziBool.Bool)
           {ghczmprim:GHCziBool.False ->
              %case integer:GHCziIntegerziInternals.Integer (base:GHCziClasses.zeze
                                                             @ integer:GHCziIntegerziInternals.Integer
                                                             zddEqrwB dsdwo
                                                             (integer:GHCziInteger.smallInteger
                                                              (1::ghczmprim:GHCziPrim.Intzh)))
              %of (wild1Xn::ghczmprim:GHCziBool.Bool)
                {ghczmprim:GHCziBool.False ->
                   base:GHCziNum.zp @ integer:GHCziIntegerziInternals.Integer
                   base:GHCziNum.zdf2
                   (main:Main.fib
                    (base:GHCziNum.zm @ integer:GHCziIntegerziInternals.Integer
                     base:GHCziNum.zdf2 dsdwo
                     (integer:GHCziInteger.smallInteger
                      (1::ghczmprim:GHCziPrim.Intzh))))
                   (main:Main.fib
                    (base:GHCziNum.zm @ integer:GHCziIntegerziInternals.Integer
                     base:GHCziNum.zdf2 dsdwo
                     (integer:GHCziInteger.smallInteger
                      (2::ghczmprim:GHCziPrim.Intzh))));
                 ghczmprim:GHCziBool.True ->
                   integer:GHCziInteger.smallInteger (1::ghczmprim:GHCziPrim.Intzh)};
            ghczmprim:GHCziBool.True ->
              integer:GHCziInteger.smallInteger (0::ghczmprim:GHCziPrim.Intzh)};
   main:Main.main :: (base:GHCziIOBase.IO ghczmprim:GHCziUnit.Z0T) =
     base:GHCziBase.zd
     @ ((ghczmprim:GHCziTypes.ZMZN ghczmprim:GHCziTypes.Char))
     @ ((base:GHCziIOBase.IO ghczmprim:GHCziUnit.Z0T))
     base:SystemziIO.putStrLn
     (base:GHCziBase.zpzp @ ghczmprim:GHCziTypes.Char
      (base:GHCziBase.unpackCStringzh
       ("The 10. fibonacci number is: "::ghczmprim:GHCziPrim.Addrzh))
      (base:GHCziBase.zd @ integer:GHCziIntegerziInternals.Integer
       @ ((ghczmprim:GHCziTypes.ZMZN ghczmprim:GHCziTypes.Char)) showrwzz
       (main:Main.fib
        (integer:GHCziInteger.smallInteger
         (10::ghczmprim:GHCziPrim.Intzh)))));
   main:ZCMain.main :: (base:GHCziIOBase.IO ghczmprim:GHCziUnit.Z0T) =
     base:GHCziTopHandler.runMainIO @ ghczmprim:GHCziUnit.Z0T
     main:Main.main};
